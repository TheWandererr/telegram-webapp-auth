plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'gg.jte.gradle' version '3.1.16'
}

group = 'by.akonashchenko'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

var lombokVersion = "1.18.38"
var mapStructVersion = "1.6.3"
var jteVersion = "3.1.16"

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "gg.jte:jte-spring-boot-starter-3:${jteVersion}"

    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'org.liquibase:liquibase-core'

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation("org.mapstruct:mapstruct:${mapStructVersion}")
    annotationProcessor("org.mapstruct:mapstruct-processor:${mapStructVersion}")

    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'commons-codec:commons-codec:1.18.0'
    implementation 'jakarta.validation:jakarta.validation-api:3.1.1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.testcontainers:testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

jte {
    generate()
    binaryStaticContent = true
}

test {
    environment "TELEGRAM_WEBAPP_BOT_TOKEN", "5768337691:AAH5YkoiEuPk8-FZa32hStHTqXiLPtAEhx8"
    useJUnitPlatform()
}
